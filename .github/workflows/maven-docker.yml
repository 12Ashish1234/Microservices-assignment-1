# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  # pull_request:
  #   branches: [ "main" ]
  #   types: [opened, synchronize, reopened]
jobs:
#   build:
#     runs-on: ubuntu-latest

#     steps:
#     - uses: actions/checkout@v3
#     - name: Set up JDK 17
#       uses: actions/setup-java@v3
#       with:
#         java-version: '17'
#         distribution: 'temurin'
#         cache: maven

# #Docker action to build and push the docker image
#     - name: Build and Push docker image
#       uses: mr-smithers-excellent/docker-build-push@v3
#       with:
#         image: ashish21bd/gitactions-test
#         tags: v1, latest
#         dockerfile: ./src/Dockerfile
#         registry: docker.io
#         username: ${{ secrets.DOCKER_USERNAME }}
#         password: ${{ secrets.DOCKER_PASSWORD }}

# Pushing docker image to azure acr
  build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven

    - name: Docker build and push
      uses: azure/docker-login@v1
      with:
          login-server: testacrspringapp.azurecr.io
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
    - run: |
          docker build . -t testacrspringapp.azurecr.io/test-app:${{ github.sha }}
          docker push testacrspringapp.azurecr.io/test-app:${{ github.sha }}
